; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; Platform IO 4.0

[platformio]
; default_envs=debug
; default_envs=atomic_sun
; default_envs=atomic_sunv2.1
; default_envs=1ch_dimmer
; default_envs=1ch_dimmer_with_pm
; default_envs=blindsctrl
; default_envs=weather
; default_envs=ws_95
; default_envs=ws_91
default_envs=remote
; default_envs=clock
; default_envs=clockv2
; default_envs=esp8266heltec_wifi_kit_8
; default_envs=esp32


; -------------------------------------------------------------------------
;  shared env
[env]
platform = espressif8266@2.2.3
framework = arduino
extra_scripts = scripts/extra_script.py

board = nodemcu
board_build.flash_mode = dio
upload_speed = 921600
monitor_speed = 115200
monitor_rts = 0
monitor_dtr = 0

; -------------------------------------------------------------------------
[common]

lib_deps =
    https://github.com/sascha432/ESPAsyncWebServer
    ; ESP Async WebServer
    AsyncMqttClient
    Crypto

src_filter =
    ${env.src_filter}
    -<lib/i2c_uart_bridge/StreamString/>

upload_command = python.exe .\scripts\tools\kfcfw_ota.py --no-status $UPLOAD_FLAGS

build_flags =
    -I./include
    -I./lib/KFCBaseLibrary/include
    -I./lib/KFCBaseLibrary/src/VirtualPin
    -I./lib/KFCJson/include
    -I./lib/KFCTimezone/include
    -I./lib/KFCSyslog/include
    -I./lib/KFCResetDetector/include
    -I./lib/KFCEventScheduler/include
    -I./lib/KFCWebFramework/include
    -I./lib/KFCConfiguration/include
    -D HAVE_KFC_RESTAPI=1
    -I./lib/KFCRestApi
    -D CONFIG_MAGIC_DWORD=0x72a82166
    -D CUSTOM_CONFIG_PRESET=1
    -D HAVE_PROGMEM_DATA=1
    -D SPIFFS_SUPPORT=1
    -D MINIFY_WEBUI=1
    -D LOGGER=1
    ; -D LOGGER=0
    ; -D FILE_MANAGER=0
    ; -D NTP_CLIENT=0
    ; -D MDNS_SUPPORT=0
    -D FILE_MANAGER=1
    -D NTP_CLIENT=1
    -D MDNS_SUPPORT=1
    -D WEBSERVER_SUPPORT=1
    -D FORM_DATA_CLASS_OVERRIDE=1
    -D USE_REMOTE_TIMEZONE=1
    -D HAVE_KFC_PLUGINS=1
    -D SERIALTWOWIRE_NO_GLOBALS=1
    -D SERIALTWOWIRE_USE_BUFFERSTREAM=1
    -D SPEED_TEST_NO_AUTH=1
    ; -D KFC_TWOWIRE_SDA=SDA
    ; -D KFC_TWOWIRE_SCL=SCL
    -D KFC_TWOWIRE_CLOCK_STRETCH=45000
    ; required for espressif8266@1.8.0
    ; -I./lib/sprintf_wrapper/include
    ; -Wl,--wrap=snprintf
    ; -Wl,--wrap=vsnprintf
    ; -Wl,--wrap=snprintf_P
    ; -Wl,--wrap=vsnprintf_P
    ; -D PRINTF_WRAPPER_ENABLED=1

; -------------------------------------------------------------------------
[env_pin_debugger]

build_flags =
    ; -Wl,--wrap=analogWrite
    ; -Wl,--wrap=analogRead
    ; -Wl,--wrap=digitalWrite
    -Wl,--wrap=digitalRead
    ; -Wl,--wrap=pinMode
    ; -Wl,--wrap=attachInterrupt
    ; -Wl,--wrap=attachScheduledInterrupt
    ; -Wl,--wrap=detachInterrupt
    -D PIN_DEBUGGER=1

; -------------------------------------------------------------------------
[env_esp8266]

lib_deps =
    https://github.com/sascha432/ESPAsyncTCP.git
    ESP8266WiFi
    asyncHTTPrequest
    https://github.com/krzychb/EspSaveCrash.git
    ${common.lib_deps}
    https://github.com/sascha432/AsyncPing

build_flags =
    ${common.build_flags}
    -D ESP8266=1
    -Wl,-Teagle.flash.4m1m.ld
    ; -Wl,-Teagle.flash.8m6m.ld

; -------------------------------------------------------------------------
[env_esp32]

lib_deps =
    AsyncTCP
    HTTPClient
    WiFiClientSecure
    ${common.lib_deps}

build_flags =
    ${common.build_flags}
    -D ESP32=1
    -Wl,--wrap=settimeofday

; -------------------------------------------------------------------------
[debug]

lib_deps =
    ${common.lib_deps}

build_flags =
    -Og -ggdb
    -D ENABLE_GDB=1
    -D DEBUG=1
    -D DEBUG_OUTPUT=DebugSerial
    -D KFC_SERIAL_PORT=Serial
    -D KFC_SAFE_MODE_SERIAL_PORT=KFC_SERIAL_PORT
    -D DEBUG_USE_SYSLOG=0
    -D DEBUG_INCLUDE_SOURCE_INFO=1
    -D DEBUG_HAVE_SAVECRASH=1
    -D DEBUG_SAVECRASH_OFS=0
    -D DEBUG_SAVECRASH_SIZE=512

; -------------------------------------------------------------------------
[release]

lib_deps =
    ${common.lib_deps}

build_flags =
    -O3
    -D ENABLE_GDB=0
    -D DEBUG=0
    -D DEBUG_OUTPUT=DebugSerial
    -D KFC_SERIAL_PORT=Serial
    -D KFC_SAFE_MODE_SERIAL_PORT=KFC_SERIAL_PORT
    -D DEBUG_USE_SYSLOG=0
    -D DEBUG_INCLUDE_SOURCE_INFO=0
    -D DEBUG_HAVE_SAVECRASH=1
    -D DEBUG_SAVECRASH_OFS=0
    -D DEBUG_SAVECRASH_SIZE=256

; -------------------------------------------------------------------------
; esp8266 shared debug env
; debug_esp8266 -> env_esp8266 -> common, debug
[debug_esp8266]

lib_deps = ${debug.lib_deps}
    ${env_esp8266.lib_deps}

build_flags = ${debug.build_flags}
    ${env_esp8266.build_flags}

; -------------------------------------------------------------------------
; esp8266 shared release env
; release_esp8266 -> env_esp8266 -> common, release
[release_esp8266]

lib_deps = ${release.lib_deps} ${env_esp8266.lib_deps}

build_flags = ${release.build_flags} ${env_esp8266.build_flags}

; -------------------------------------------------------------------------
; esp32 shared debug env
; debug_esp32 -> env_esp32 -> common, release
[debug_esp32]

lib_deps = ${release.lib_deps} ${env_esp32.lib_deps}

build_flags = ${release.build_flags} ${env_esp32.build_flags}

; -------------------------------------------------------------------------
; esp32 shared release env
; release_esp32 -> env_esp32 -> common, release
[release_esp32]

lib_deps = ${release.lib_deps} ${env_esp32.lib_deps}

build_flags = ${release.build_flags} ${env_esp32.build_flags}

; -------------------------------------------------------------------------
; debug esp8266 GDBSTUB
[debug_esp8266_gdbstub]

build_flags =
    -D GDBSTUB_FREERTOS=0
    -D GDBSTUB_USE_OWN_STACK=0
    -D GDBSTUB_CTRLC_BREAK=1
    -D GDBSTUB_REDIRECT_CONSOLE_OUTPUT=1
    -D GDBSTUB_BREAK_ON_INIT=0
    -D HAVE_GDBSTUB=1
    ; -D DEBUG_ESP_PORT=Serial
    ; -D DEBUG_ESP_CORE
    ; -D DEBUG_ESP_WIFI
    ; -D DEBUG_ESP_OOM
    ; -D DEBUG_ESP_SSL
    ; -D DEBUG_ESP_TLS_MEM
    ; -D DEBUG_ESP_HTTP_CLIENT
    ; -D DEBUG_ESP_HTTP_SERVER
    ; -D DEBUG_ESP_HTTP_UPDATE
    ; -D DEBUG_ESP_UPDATER
    ; -D DEBUG_ESP_OTA
    ; -D DEBUG_ESP_OOM -include "umm_malloc/umm_malloc_cfg.h"

; -------------------------------------------------------------------------
; enable all debugging
[debug_kfc_all]

build_flags =
    -D DEBUG_WEB_SERVER=1
    -D DEBUG_KFC_CONFIG=1
    -D DEBUG_CONFIGURATION=1
    -D DEBUG_PLUGINS=1
    -D DEBUG_MDNS_SD=1
    -D DEBUG_KFC_JSON=1
    -D DEBUG_SSD1306_PLUGIN=1
    -D DEBUG_AT_MODE=1
    -D DEBUG_TEMPLATES=1
    -D DEBUG_LOGGER=1
    -D DEBUG_SERIAL_HANDLER=1
    -D DEBUG_ASYNC_WEB_RESPONSE=1
    -D DEBUG_WEB_SOCKETS=1
    -D DEBUG_EVENT_SCHEDULER=1
    -D DEBUG_LOOP_FUNCTIONS=1
    -D DEBUG_OSTIMER=1
    -D DEBUG_VIRTUAL_PIN=1
    -D DEBUG_VIRTUAL_PIN
    -D DEBUG_WIFICALLBACKS=1
    -D DEBUG_RESET_DETECTOR=1
    -D DEBUG_RTC_MEMORY_MANAGER=1
    -D DEBUG_SYSLOG=1
    -D DEBUG_BOOTSTRAP_MENU=1
    -D DEBUG_KFC_FORMS=1
    -D DEBUG_HOME_ASSISTANT=1
    -D DEBUG_HUE_EMULATION=1
    -D DEBUG_WEBUI=1
    -D DEBUG_MDNS_SD=1
    -D DEBUG_MQTT_CLIENT=1
    -D DEBUG_HTTP2SERIAL=1
    -D DEBUG_FILE_MANAGER=1
    -D DEBUG_NTP_CLIENT=1
    -D DEBUG_PING_MONITOR=1
    -D DEBUG_REMOTE_TIMEZONE=1
    -D DEBUG_SERIAL2TCP=1
    -D DEBUG_4CH_DIMMER=1
    -D DEBUG_SSD1306_PLUGIN=1
    -D DEBUG_PIN_MONITOR=1
    -D DEBUG_IOT_BUTTONS=1
    -D DEBUG_IOT_DIMMER_MODULE=1
    -D DEBUG_IOT_SENSOR=1
    -D DEBUG_IOT_SWITCH=1
    -D DEBUG_PIN_MONITOR=1
    -D DEBUG_SERIAL2TCP=1
    -D DEBUG_STK500V1=1
    -D DEBUG_IOT_BLINDS_CTRL=1
    -D DEBUG_IOT_RF24=1
    -D DEBUG_IOT_WEATHER_STATION=1
    -D DEBUG_IOT_CLOCK=1
    -D DEBUG_IOT_REMOTE_CONTROL=1
    -D DEBUG_KFC_REST_API=1
    -D DEBUG_HOME_ASSISTANT=1

; -------------------------------------------------------------------------
[lib_buttons]

lib_deps =
    Bounce2
    r89m Buttons
    r89m PushButton

; -------------------------------------------------------------------------
[lib_sensors]

lib_deps =
    Adafruit Unified Sensor
    Adafruit BME280 Library
    Adafruit BMP280 Library
    https://github.com/adafruit/Adafruit_CCS811.git

; -------------------------------------------------------------------------
; debug env
; -------------------------------------------------------------------------

[env:debug]
; platform = espressif8266

lib_deps = ${debug_esp8266.lib_deps}
    ; Adafruit SSD1306
    ; https://github.com/xreef/PCF8574_library
    ; fauxmoESP
    ; Adafruit Unified Sensor
    ; Adafruit BME280 Library
    ; Adafruit BMP280 Library
    ; https://github.com/adafruit/Adafruit_CCS811.git
    ; https://github.com/sascha432/RF24
    ; ${lib_buttons.lib_deps}

    ; -D NO_GLOBAL_EEPROM
    ; -D EEPROM_ADDR=0x40202000
    ; -D DEBUG=1
    ; -D DEBUG_INCLUDE_SOURCE_INFO=1

build_flags = ${debug_esp8266.build_flags}
    -I./lib/i2c_uart_bridge/src
    ; -D HAVE_GFX_LIB=1
    ; -I./lib/KFCGfx/include
    ; -I./lib/KFCOpenWeather/include
    -D __LED_BUILTIN=2
    -D INVERT_BUILTIN_LED=1
    -D SYSLOG=1
    -D WEB_SOCKET_ENCRYPTION=0
    -D MQTT_SUPPORT=1
    -D MQTT_USE_PACKET_CALLBACKS=0
    -D MQTT_AUTO_DISCOVERY=1
    -D AT_MODE_SUPPORTED=1
    -D ESP8266_AT_MODE_SUPPORT=0
    -D HTTP2SERIAL=1
    -D HUE_EMULATION=0
    -D REST_API_SUPPORT=0
    -D HOME_ASSISTANT_INTEGRATION=0
    -D PING_MONITOR=1
    -D I2CSCANNER_PLUGIN=0
    -D RTC_SUPPORT=0
    ; -D KFC_SERIAL_RATE=57600
    -D IOT_ATOMIC_SUN_V2=0
    -D IOT_DIMMER_MODULE=0
    -D IOT_DIMMER_MODULE_CHANNELS=1
    -D IOT_DIMMER_MODULE_INTERFACE_UART=0
    -D IOT_DIMMER_MODULE_BAUD_RATE=KFC_SERIAL_RATE
    -D SSD1306_PLUGIN=0
    -D IOT_SENSOR=0
    -D IOT_SENSOR_HAVE_LM75A=0x48
    ; -D IOT_SENSOR_HAVE_BME280=0x76
    ; -D IOT_SENSOR_HAVE_BME680=0x77
    ; -D IOT_SENSOR_HAVE_CCS811=0x5A
    -D IOT_SENSOR_HAVE_HLW8012=0
    -D IOT_SENSOR_HAVE_BATTERY=1
    -D DEBUG_IOT_SENSOR=1
    -D DEBUG_4CH_DIMMER=0
    -D DEBUG_WEB_SOCKETS=0
    -D DEBUG_KFC_CONFIG=0
    -D DEBUG_MQTT_CLIENT=0
    -D DEBUG_WEBUI=0
    -D IOT_SWITCH=0
    -D IOT_SWITCH_PINS=D6,D7
    -D IOT_SWITCH_ACTIVE_STATE=PRESSED_WHEN_LOW
    -D IOT_DIMMER_MODULE_PINMODE=INPUT_PULLUP
    -D IOT_DIMMER_MODULE_HAS_BUTTONS=1
    -D DEBUG_IOT_DIMMER_MODULE=0
    -D DEBUG_IOT_SWITCH=0
    -D PIN_MONITOR=0
    -D DEBUG_PIN_MONITOR=0
    -D SERIAL2TCP=0
    -D DEBUG_SERIAL2TCP=0
    -D STK500V1=0
    -D STK500V1_RESET_PIN=D1
    -D DEBUG_STK500V1=1
    -D IOT_BLINDS_CTRL=0
    -D DEBUG_IOT_BLINDS_CTRL=1
    -D IOT_RF24_MASTER=0
    -D IOT_RF24_MASTER_HAVE_PCF8574=1
    -D IOT_RF24_MASTER_PCF8574_ADDRESS=0x27
    -D DEBUG_IOT_RF24=1
    -D IOT_WEATHER_STATION=0
    -D DEBUG_IOT_WEATHER_STATION=1
    -D DEBUG_EVENT_SCHEDULER=0

; ; board = esp01_1m
board = esp12e
upload_resetmethod = ck
; board = nodemcu
upload_port=com4
monitor_port=com4
; upload_port=com12
; monitor_port=com12
; upload_port=com4
; monitor_port=com4

; -------------------------------------------------------------------------
; weather station
; -------------------------------------------------------------------------

[env:weather]

lib_deps =
    ${debug_esp8266.lib_deps}
    Adafruit GFX Library
    Adafruit Unified Sensor
    Adafruit BME280 Library
    https://github.com/adafruit/Adafruit-ST7735-Library
    https://github.com/adafruit/RTClib
    https://github.com/adafruit/Adafruit_MPR121

build_flags =
    ${debug_esp8266.build_flags}
    -D HAVE_GFX_LIB=1
    -I./lib/KFCGfx/include
    -I./lib/KFCOpenWeather/include
    -D INVERT_BUILTIN_LED=1
    -D SYSLOG=1
    -D WEB_SOCKET_ENCRYPTION=0
    -D ASYNC_TCP_SSL_ENABLED=1
    -D MQTT_SUPPORT=1
    -D MQTT_USE_PACKET_CALLBACKS=0
    -D MQTT_AUTO_DISCOVERY=1
    -D AT_MODE_SUPPORTED=1
    -D ESP8266_AT_MODE_SUPPORT=0
    -D HTTP2SERIAL=1
    -D PING_MONITOR=1
    -D IOT_WEATHER_STATION=1
    -D DEBUG_IOT_WEATHER_STATION=1
    -D HAVE_NEOPIXEL=1
    -D RTC_SUPPORT=1
    -D RTC_DEVICE_DS3231=1
    -D IOT_SENSOR=1
    -D IOT_SENSOR_HAVE_DS3231=1
    -D IOT_SENSOR_HAVE_LM75A=0x48
    -D IOT_SENSOR_HAVE_BME280=0x76
    -D IOT_SENSOR_HAVE_BATTERY=1
    -D IOT_SENSOR_NAMES_BATTERY=\"Supply\ Voltage\"
    -D IOT_SENSOR_BATTERY_VOLTAGE_DIVIDER_R1=22.0
    -D IOT_SENSOR_BATTERY_VOLTAGE_DIVIDER_R2=1000.0
    -D IOT_SENSOR_BATTERY_VOLTAGE_DIVIDER_CALIBRATION=1.0
    -D IOT_SENSOR_BATTERY_CHARGE_DETECTION=0
    -D IOT_WEATHER_STATION_HAS_TOUCHPAD=1
    -D SPEED_BOOSTER_ENABLED=0
    -D KFC_TWOWIRE_SDA=0
    -D KFC_TWOWIRE_SCL=2
    -D I2CSCANNER_PLUGIN=1
    -D DEBUG_IOT_SENSOR=1

monitor_port=com3
; upload_port = com3
; monitor_port=com4
; upload_port = com4
board = esp12e
upload_resetmethod = ck
# firmware: pio run -t upload
# spiffs: pio run -t uploadfs
upload_port = 192.168.0.91
upload_command = ${common.upload_command}

[env:ws_95]
extends = env:weather
build_flags = ${env:weather.build_flags}
    -D __LED_BUILTIN=-3
    -D __LED_BUILTIN_WS2812_PIN=16
    -D __LED_BUILTIN_WS2812_NUM_LEDS=3
    -D TFT_PIN_LED=15
upload_port = 192.168.0.95
upload_flags =
    --user=KFCDABF32
    --pass=12345678
    flash
    $UPLOAD_PORT
    --image=./.pio/build/$PIOENV/firmware.bin

[env:ws_91]
extends = env:weather
build_flags = ${env:weather.build_flags}
    -D __LED_BUILTIN=-3
    -D __LED_BUILTIN_WS2812_PIN=15
    -D __LED_BUILTIN_WS2812_NUM_LEDS=3
    -D TFT_PIN_LED=16
upload_port = com3
; upload_port = 192.168.0.91
; upload_flags =
;     --user=KFC736379
;     --pass=12345678
;     flash
;     $UPLOAD_PORT
;     --image=./.pio/build/$PIOENV/firmware.bin
upload_command =

; -------------------------------------------------------------------------
; remote
; -------------------------------------------------------------------------

[env:remote]

lib_deps =
    ${debug_esp8266.lib_deps}
    ${lib_buttons.lib_deps}

lib_ignore = AsyncTCP

build_flags =
    ${debug_esp8266.build_flags}
    ${env_pin_debugger.build_flags}
    ; ${debug_esp8266_gdbstub.build_flags}
    -D __LED_BUILTIN=2
    -D INVERT_BUILTIN_LED=1
    -D SYSLOG=1
    -D WEB_SOCKET_ENCRYPTION=0
    -D ASYNC_TCP_SSL_ENABLED=1
    -D MQTT_SUPPORT=1
    -D MQTT_USE_PACKET_CALLBACKS=0
    -D MQTT_AUTO_DISCOVERY=1
    -D AT_MODE_SUPPORTED=1
    -D ESP8266_AT_MODE_SUPPORT=0
    -D HTTP2SERIAL=1
    ; -D IOT_BUTTONS=1
    ; -D PIN_MONITOR=1
    -D IOT_SENSOR=1
    -D IOT_SENSOR_HAVE_BATTERY=1
    -D IOT_SENSOR_NAMES_BATTERY=\"Battery\ Voltage\"
    -D IOT_SENSOR_BATTERY_VOLTAGE_DIVIDER_R1=75.0
    -D IOT_SENSOR_BATTERY_VOLTAGE_DIVIDER_R2=330.0
    -D IOT_SENSOR_BATTERY_VOLTAGE_DIVIDER_CALIBRATION=1.0
    -D IOT_SENSOR_BATTERY_CHARGE_DETECTION=5
    -D SPEED_BOOSTER_ENABLED=0
    -D PLUGIN_DEEP_SLEEP_DELAYED_START_TIME=12000
    -D HOME_ASSISTANT_INTEGRATION=1
    -D IOT_REMOTE_CONTROL=1
    -D DEBUG_HOME_ASSISTANT=1

upload_port=com12
monitor_port=com12
board = esp12e
upload_resetmethod = ck

; -------------------------------------------------------------------------
; 7 segment clock
; -------------------------------------------------------------------------

[env:clock]

lib_deps =
    ${debug_esp8266.lib_deps}
    ${lib_buttons.lib_deps}
    Adafruit Unified Sensor
    Adafruit BME280 Library
    https://github.com/sascha432/Adafruit_INA219
    https://github.com/adafruit/Adafruit_NeoPixel
    https://github.com/adafruit/RTClib

build_flags =
    ${debug_esp8266.build_flags}
    -D __LED_BUILTIN=2
    -D INVERT_BUILTIN_LED=1
    -D SYSLOG=1
    -D MQTT_SUPPORT=1
    -D MQTT_AUTO_DISCOVERY=1
    -D AT_MODE_SUPPORTED=1
    -D HTTP2SERIAL=1
    -D PING_MONITOR=1
    -D IOT_SENSOR=1
    -D IOT_SENSOR_HAVE_LM75A=0x48
    -D IOT_SENSOR_HAVE_BME280=0x76
    -D IOT_SENSOR_HAVE_BATTERY=1
    -D IOT_SENSOR_HAVE_INA219=0x40
    -D IOT_SENSOR_INA219_R_SHUNT=0.03148
    -D IOT_SENSOR_INA219_BUS_URANGE=INA219_CONFIG_BVOLTAGERANGE_16V
    -D IOT_SENSOR_INA219_GAIN=INA219_CONFIG_GAIN_4_160MV
    -D IOT_SENSOR_HAVE_DS3231=1
    -D IOT_SENSOR_NAMES_BATTERY=\"Supply\ Voltage\"
    -D IOT_SENSOR_BATTERY_VOLTAGE_DIVIDER_R1=22.0
    -D IOT_SENSOR_BATTERY_VOLTAGE_DIVIDER_R2=1000.0
    -D IOT_SENSOR_BATTERY_VOLTAGE_DIVIDER_CALIBRATION=0.9685599232493649
    -D IOT_SENSOR_BATTERY_CHARGE_DETECTION=0
    -D SPEED_BOOSTER_ENABLED=0
    -D IOT_CLOCK=1
    -D IOT_CLOCK_NEOPIXEL=0
    -D IOT_CLOCK_NEOPIXEL_PIN=12
    -D KFC_TWOWIRE_SDA=5
    -D KFC_TWOWIRE_SCL=4
    -D DEBUG_IOT_CLOCK=1
    -D RTC_SUPPORT=1
    -D RTC_DEVICE_DS3231=1
    -D NTP_HAVE_CALLBACKS=1
    -D I2CSCANNER_PLUGIN=1

upload_port=com12f
monitor_port=com12

; -------------------------------------------------------------------------
; 7 segment clock v2
; -------------------------------------------------------------------------

[env:clockv2]

lib_deps =
    ${debug_esp8266.lib_deps}
    ${lib_buttons.lib_deps}
    Adafruit Unified Sensor
    Adafruit BME280 Library
    https://github.com/sascha432/Adafruit_INA219
    https://github.com/sascha432/Adafruit_NeoPixel.git
    https://github.com/adafruit/RTClib

build_flags =
    ${debug_esp8266.build_flags}
    -D __LED_BUILTIN=2
    -D INVERT_BUILTIN_LED=1
    -D SYSLOG=1
    -D MQTT_SUPPORT=1
    -D MQTT_AUTO_DISCOVERY=1
    -D AT_MODE_SUPPORTED=1
    -D HTTP2SERIAL=1
    -D PING_MONITOR=1
    -D IOT_SENSOR=1
    -D IOT_SENSOR_HAVE_LM75A=0x48
    -D IOT_SENSOR_HAVE_DS3231=1
    -D IOT_SENSOR_HAVE_INA219=0
    -D IOT_SENSOR_INA219_R_SHUNT=0.016
    -D IOT_SENSOR_INA219_BUS_URANGE=INA219_CONFIG_BVOLTAGERANGE_32V
    -D IOT_SENSOR_INA219_GAIN=INA219_CONFIG_GAIN_2_80MV
    -D IOT_CLOCK=1
    -D IOT_CLOCK_NEOPIXEL=1
    -D IOT_CLOCK_NEOPIXEL_PIN=12
    -D IOT_CLOCK_NUM_PX_PER_COLON=2
    -D IOT_CLOCK_NUM_COLONS=1
    -D IOT_CLOCK_NUM_PIXELS=4
    -D IOT_CLOCK_SEGMENT_ORDER={6,5,2,3,4,0,1}
    -D IOT_CLOCK_DIGIT_ORDER={30,2,3,1,0}
    -D IOT_CLOCK_BUTTON_PIN=0
    -D DEBUG_IOT_CLOCK=1
    -D SPEED_BOOSTER_ENABLED=0
    -D KFC_TWOWIRE_SDA=4
    -D KFC_TWOWIRE_SCL=5
    -D RTC_SUPPORT=1
    -D RTC_DEVICE_DS3231=1
    -D NTP_HAVE_CALLBACKS=1
    -D I2CSCANNER_PLUGIN=1
    -D DEBUG_KFC_JSON=1
    -D DEBUG_IOT_SENSOR=1
    -D DEBUG_MQTT_CLIENT=1
    -D DEBUG_NTP_CLIENT=1

board = esp12e
upload_port=com4
monitor_port=com4

; -------------------------------------------------------------------------
; 1 channel dimmer
; -------------------------------------------------------------------------

[env:1ch_dimmer]

lib_deps =
    ${debug_esp8266.lib_deps}
    ${lib_buttons.lib_deps}

build_flags =
    ${debug_esp8266.build_flags}
    -I./lib/i2c_uart_bridge/src
    -D __LED_BUILTIN=2
    -D INVERT_BUILTIN_LED=1
    -D SYSLOG=1
    -D MQTT_SUPPORT=1
    -D MQTT_AUTO_DISCOVERY=1
    -D AT_MODE_SUPPORTED=1
    -D HTTP2SERIAL=1
    -D PING_MONITOR=1
    -D KFC_SERIAL_RATE=57600
    -D IOT_DIMMER_MODULE=1
    -D IOT_DIMMER_MODULE_CHANNELS=1
    -D IOT_DIMMER_MODULE_INTERFACE_UART=1
    -D IOT_DIMMER_MODULE_BAUD_RATE=KFC_SERIAL_RATE
    -D IOT_DIMMER_MODULE_MAX_BRIGHTNESS=8333
    -D IOT_DIMMER_MODULE_HAS_BUTTONS=1
    -D IOT_DIMMER_MODULE_PINMODE=INPUT
    -D IOT_SWITCH_ACTIVE_STATE=PRESSED_WHEN_LOW
    -D PIN_MONITOR=1
    -D STK500V1=1
    -D STK500V1_RESET_PIN=D1
    -D DEBUG_STK500V1=1

; board = esp12e
upload_speed = 921600
monitor_speed = 57600

; -------------------------------------------------------------------------
; 1 channel dimmer with power monitor
; -------------------------------------------------------------------------

[env:1ch_dimmer_with_pm]

lib_deps =
    ${debug_esp8266.lib_deps}
    ${lib_buttons.lib_deps}

build_flags =
    ${debug_esp8266.build_flags}
    -I./lib/i2c_uart_bridge/src
    -D __LED_BUILTIN=2
    -D INVERT_BUILTIN_LED=1
    -D SYSLOG=1
    -D MQTT_SUPPORT=1
    -D MQTT_AUTO_DISCOVERY=1
    -D AT_MODE_SUPPORTED=1
    -D HTTP2SERIAL=1
    -D PING_MONITOR=1
    -D KFC_SERIAL_RATE=57600
    -D IOT_DIMMER_MODULE=1
    -D IOT_DIMMER_MODULE_CHANNELS=1
    -D IOT_DIMMER_MODULE_INTERFACE_UART=1
    -D IOT_DIMMER_MODULE_BAUD_RATE=KFC_SERIAL_RATE
    -D IOT_DIMMER_MODULE_MAX_BRIGHTNESS=8333
    -D IOT_DIMMER_MODULE_HAS_BUTTONS=1
    -D IOT_DIMMER_MODULE_PINMODE=INPUT
    -D IOT_SWITCH_ACTIVE_STATE=PRESSED_WHEN_LOW
    -D PIN_MONITOR=1
    -D IOT_SENSOR=1
    -D IOT_SENSOR_HAVE_HLW8012=1
    -D IOT_SENSOR_NAMES_HLW8012=\"\"
    -D IOT_SENSOR_HLW80xx_ADJUST_CURRENT=1
    -D SPEED_BOOSTER_ENABLED=0
    -D STK500V1=1
    -D STK500V1_RESET_PIN=D1
    -D DEBUG_STK500V1=1
     ${sysenv.EXTRA_BUILD_FLAGS}

; board = esp12e
; upload_resetmethod = ck
board = nodemcu
upload_port=com12
monitor_port=com12
upload_speed = 921600
monitor_speed = 57600

; -------------------------------------------------------------------------
; atomic sun 4 channel dimmer
; -------------------------------------------------------------------------

[env:atomic_sun]

lib_deps =
    ${debug_esp8266.lib_deps}

build_flags =
    ${debug_esp8266.build_flags}
    -I./lib/i2c_uart_bridge/src
    -D __LED_BUILTIN=2
    -D INVERT_BUILTIN_LED=1
    -D SYSLOG=1
    -D MQTT_SUPPORT=1
    -D MQTT_AUTO_DISCOVERY=1
    -D AT_MODE_SUPPORTED=1
    -D HTTP2SERIAL=1
    -D PING_MONITOR=1
    -D KFC_SERIAL_RATE=57600
    -D IOT_ATOMIC_SUN_V2=1
    -D IOT_DIMMER_MODULE_INTERFACE_UART=1
    -D IOT_DIMMER_MODULE_BAUD_RATE=KFC_SERIAL_RATE
    -D IOT_DIMMER_MODULE_MAX_BRIGHTNESS=8333
    -D DEBUG_4CH_DIMMER=1
    -D DEBUG_IOT_DIMMER_MODULE=1
    -D STK500V1=1
    -D STK500V1_RESET_PIN=D1

board = esp12e
; upload_port=com4
; monitor_port=com4
; upload_resetmethod = ck
; upload_speed = 921600
; board = nodemcu
; upload_port=com4
; monitor_port=com4
upload_port=com12
monitor_port=com12

upload_speed = 921600
monitor_speed = 57600


; -------------------------------------------------------------------------
; atomic sun 4 channel dimmer v2.1 with energy monitor
; -------------------------------------------------------------------------

[env:atomic_sunv2.1]

lib_deps =
    ${debug_esp8266.lib_deps}

build_flags =
    ${debug_esp8266.build_flags}
    -I./lib/i2c_uart_bridge/src
    -D __LED_BUILTIN=2
    -D INVERT_BUILTIN_LED=1
    -D SYSLOG=1
    -D MQTT_SUPPORT=1
    -D MQTT_AUTO_DISCOVERY=1
    -D AT_MODE_SUPPORTED=1
    -D HTTP2SERIAL=1
    -D PING_MONITOR=1
    -D KFC_SERIAL_RATE=57600
    -D IOT_ATOMIC_SUN_V2=1
    -D IOT_DIMMER_MODULE_INTERFACE_UART=1
    -D IOT_DIMMER_MODULE_BAUD_RATE=KFC_SERIAL_RATE
    -D IOT_DIMMER_MODULE_MAX_BRIGHTNESS=8333
    -D DEBUG_4CH_DIMMER=1
    -D DEBUG_IOT_DIMMER_MODULE=1
    -D IOT_SENSOR=1
    -D IOT_SENSOR_HAVE_HLW8012=1
    -D IOT_SENSOR_NAMES_HLW8012=\"\"
    -D IOT_SENSOR_HLW80xx_ADJUST_CURRENT=1
    -D IOT_SENSOR_HLW80xx_SHUNT=0.008
    -D IOT_SENSOR_HLW80xx_V_RES_DIV=((4*510)/1.0)
    -D IOT_SENSOR_HLW8012_CF=12
    -D IOT_SENSOR_HLW8012_CF1=14
    -D SPEED_BOOSTER_ENABLED=0
    -D STK500V1=1
    -D STK500V1_RESET_PIN=D1

board = esp12e
upload_port=com4
monitor_port=com4

upload_speed = 921600
monitor_speed = 57600

; -------------------------------------------------------------------------
; blinds controller
; -------------------------------------------------------------------------

[env:blindsctrl]

lib_deps =
    ${debug_esp8266.lib_deps}

build_flags =
    ${debug_esp8266.build_flags}
    -D __LED_BUILTIN=2
    -D INVERT_BUILTIN_LED=1
    -D SYSLOG=1
    -D MQTT_SUPPORT=1
    -D MQTT_AUTO_DISCOVERY=1
    -D AT_MODE_SUPPORTED=1
    -D HTTP2SERIAL=1
    -D PING_MONITOR=1
    -D IOT_BLINDS_CTRL=1
    -D DEBUG_IOT_BLINDS_CTRL=1

upload_port=com12
monitor_port=com12

; -------------------------------------------------------------------------
; esp8266 test
; -------------------------------------------------------------------------

[env:esp8266heltec_wifi_kit_8]
board = heltec_wifi_kit_8
upload_protocol = esptool

lib_deps =
    ${debug_esp8266.lib_deps}

build_flags =
    ${debug_esp8266.build_flags}
    -D __LED_BUILTIN=-1
    -D INVERT_BUILTIN_LED=1
    -D SYSLOG=1
    -UFILE_MANAGER
    -UNTP_CLIENT
    -UNTP_CLIENT
    -D FILE_MANAGER=0
    -D NTP_CLIENT=0
    -D MDNS_SUPPORT=0
    -D MQTT_SUPPORT=0
    -D MQTT_USE_PACKET_CALLBACKS=0
    -D MQTT_AUTO_DISCOVERY=1
    -D AT_MODE_SUPPORTED=1
    -D ESP8266_AT_MODE_SUPPORT=1
    -D HTTP2SERIAL=0
    -D PING_MONITOR=0
    -D SSD1306_PLUGIN=1
    -D SSD1306_PLUGIN_128_32=1 -D SSD1306_PLUGIN_RESET_PIN=16 -D SSD1306_PLUGIN_SDA_PIN=4 -D SSD1306_PLUGIN_SCL_PIN=5
    ; -D ${debug_kfc.build_flags}

; -------------------------------------------------------------------------
; esp32 test
; -------------------------------------------------------------------------

[env:esp32]
platform = espressif32
board = heltec_wifi_lora_32

lib_deps =
    ${debug_esp32.lib_deps}
    Adafruit SSD1306
    Adafruit GFX Library

board_build.partitions = no_ota.csv

build_flags =
    ${debug_esp32.build_flags}
    ; -D CORE_DEBUG_LEVEL=0
    -D __LED_BUILTIN=25
    -D INVERT_BUILTIN_LED=0
    -D SYSLOG=1
    -D WEB_SOCKET_ENCRYPTION=0
    -D MQTT_SUPPORT=1
    -D AT_MODE_SUPPORTED=1
    -D TIMEZONE_USE_HTTP_CLIENT=1
    -D HTTP2SERIAL=1
    -D SERIAL2TCP=0
    -D REST_API_SUPPORT=0
    -D HOME_ASSISTANT_INTEGRATION=0
    -D PING_MONITOR=0
    -D I2CSCANNER_PLUGIN=0
    -D RTC_SUPPORT=0
    -D SSD1306_PLUGIN=1
    -D SSD1306_PLUGIN_128_64=1
    -D SSD1306_PLUGIN_RESET_PIN=16
    -D SSD1306_PLUGIN_SDA_PIN=4
    -D SSD1306_PLUGIN_SCL_PIN=15

[something]

# -D DEBUG_ESP_CORE -D DEBUG_ESP_WIFI

; -D ENABLE_GDB=1
; -D GDBSTUB_FREERTOS=0
; -D GDBSTUB_USE_OWN_STACK=0
; -D GDBSTUB_CTRLC_BREAK=0
; -D GDBSTUB_REDIRECT_CONSOLE_OUTPUT=1
; -D GDBSTUB_BREAK_ON_INIT=0
; -D DEBUG_ESP_CORE
; -D DEBUG_ESP_OOM
; -D DEBUG_ESP_WIFI
; -D DEBUG_ESP_SSL
; -D DEBUG_ESP_TLS_MEM
; -D DEBUG_ESP_HTTP_CLIENT
; -D DEBUG_ESP_HTTP_SERVER
; -D DEBUG_ESP_CORE
; -D DEBUG_ESP_WIFI
; -D DEBUG_ESP_HTTP_UPDATE
; -D DEBUG_ESP_UPDATER
; -D DEBUG_ESP_OTA
; -D DEBUG_ESP_OOM -include "umm_malloc/umm_malloc_cfg.h"
; -D DEBUG_ESP_PORT=Serial

; ; NoAssert-NDEBUG
; build_flags = -DNDEBUG

; esptool.exe -vv -cd ck -cb 115200 -cp COM9 -ca 0x00000 -cf .pio\buid\debug\firmware.bin
